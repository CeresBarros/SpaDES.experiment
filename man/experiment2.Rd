% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experiment2.R
\name{experiment2}
\alias{experiment2}
\alias{experiment2,simList-method}
\title{Run experiment, algorithm 2, using \code{\link[SpaDES.core]{spades}}}
\usage{
experiment2(
  ...,
  replicates = 1,
  clearSimEnv = FALSE,
  createUniquePaths = c("outputPath"),
  useCache = FALSE,
  debug = getOption("spades.debug"),
  drive_auth_account
)

\S4method{experiment2}{simList}(
  ...,
  replicates = 1,
  clearSimEnv = FALSE,
  createUniquePaths = c("outputPath"),
  useCache = FALSE,
  debug = getOption("spades.debug"),
  drive_auth_account = NULL
)
}
\arguments{
\item{...}{One or more \code{simList} objects}

\item{replicates}{The number of replicates to run of the same \code{simList}.
See details and examples. To minimize memory overhead, currently,
this must be length 1, i.e., all \code{...} simList objects will
receive the same number of replicates.}

\item{clearSimEnv}{Logical. If TRUE, then the envir(sim) of each simList in the return list
is emptied. This is to reduce RAM load of large return object.
Default FALSE.}

\item{createUniquePaths}{A character vector of the \code{paths} passed to \code{simInit},
indicating which should create a new, unique path, as a sub-path to the original
\code{paths} of \code{simInit}. Default, and currently only option, is \code{"outputPath"}}

\item{useCache}{Logical. Passed to \code{spades}. This will be passed with the \code{simList}
name and replicate number, allowing each replicate and each \code{simList} to be
seen as a non-cached call to \code{spades}. This will, however, may prevent \code{spades}
calls from running a second time during second call to the same
\code{experiment2} function.}

\item{debug}{Optional logical flag or character vector indicating what to print to
console at each event. See details.
Default is to use the value in \code{getOption("spades.debug")}.}

\item{drive_auth_account}{Optional character string. If provided, it will be passed
to each worker and run as \code{googledrive::drive_auth(drive_auth_account)} to allow
a specific user account for googledrive}
}
\value{
Invisibly returns a \code{simLists} object. This class
extends the \code{environment} class and
contains \code{simList} objects.
}
\description{
Given one or more \code{simList} objects, run a series of \code{spades} calls
in a structured, organized way. Methods are available to deal with outputs,
such as \code{as.data.table.simLists} which can pull out simple to complex
values from every resulting \code{simList} or object saved by \code{outputs}
in every \code{simList} run. This uses \code{future} internally, allowing
for various backends and parallelism.0
}
\details{
This function, because of its class formalism, allows for methods to be used. For example,
\code{\link{as.data.table.simLists}} allows user to pull out specific objects (in
the \code{simList} objects or on disk saved in \code{outputPath(sim)}).

The \code{outputPath} is changed so that every simulation puts outputs in a
sub-directory
of the original \code{outputPath} of each \code{simList}.
}
\note{
A \code{simLists} object can be made manually, if, say, many manual \code{spades} calls
have already been run. See example, via \code{new("simLists")}
}
\seealso{
\code{\link{as.data.table.simLists}},
  \code{\link{simInit}}, \code{\link[SpaDES.core]{spades}}, \code{\link{experiment}}
}
\author{
Eliot McIntire
}
